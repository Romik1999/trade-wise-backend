generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email    String  @unique
  password String?

  name     String    @default("Не указано")
  picture  String    @default("/uploads/no-user-image.png")
  products Product[]

  @@map("user")
}

model Product {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title       String
  description String
  price       Int
  images      String[]

  components ProductComponent[]

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @map("user_id")

  @@map("product")
}

model Component {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name        String
  description String?
  price       Int

  products ProductComponent[]

  @@map("component")
}

model ProductComponent {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  product   Product @relation(fields: [productId], references: [id])
  productId String  @map("product_id")

  component   Component @relation(fields: [componentId], references: [id])
  componentId String    @map("component_id")

  quantity Int @default(1)

  @@map("product_component")
}

enum EnumOrderStatus {
  PENDING
  PAYED
}
